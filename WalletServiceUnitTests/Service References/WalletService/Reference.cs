//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WalletServiceUnitTests.WalletService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Request", Namespace="http://schemas.datacontract.org/2004/07/WalletService")]
    [System.SerializableAttribute()]
    public partial class Request : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AccountIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NewAccountStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AccountID {
            get {
                return this.AccountIDField;
            }
            set {
                if ((this.AccountIDField.Equals(value) != true)) {
                    this.AccountIDField = value;
                    this.RaisePropertyChanged("AccountID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NewAccountState {
            get {
                return this.NewAccountStateField;
            }
            set {
                if ((this.NewAccountStateField.Equals(value) != true)) {
                    this.NewAccountStateField = value;
                    this.RaisePropertyChanged("NewAccountState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Response", Namespace="http://schemas.datacontract.org/2004/07/WalletService")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WalletServiceUnitTests.WalletService.GetWalletBalanceResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WalletServiceUnitTests.WalletService.WithdrawResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WalletServiceUnitTests.WalletService.DepositResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WalletServiceUnitTests.WalletService.AlterAccountStateResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WalletServiceUnitTests.WalletService.RegisterResponse))]
    public partial class Response : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ResponseCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ResponseCode {
            get {
                return this.ResponseCodeField;
            }
            set {
                if ((this.ResponseCodeField.Equals(value) != true)) {
                    this.ResponseCodeField = value;
                    this.RaisePropertyChanged("ResponseCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetWalletBalanceResponse", Namespace="http://schemas.datacontract.org/2004/07/WalletService")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WalletServiceUnitTests.WalletService.WithdrawResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WalletServiceUnitTests.WalletService.DepositResponse))]
    public partial class GetWalletBalanceResponse : WalletServiceUnitTests.WalletService.Response {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal WalletBalanceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal WalletBalance {
            get {
                return this.WalletBalanceField;
            }
            set {
                if ((this.WalletBalanceField.Equals(value) != true)) {
                    this.WalletBalanceField = value;
                    this.RaisePropertyChanged("WalletBalance");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WithdrawResponse", Namespace="http://schemas.datacontract.org/2004/07/WalletService")]
    [System.SerializableAttribute()]
    public partial class WithdrawResponse : WalletServiceUnitTests.WalletService.GetWalletBalanceResponse {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DepositResponse", Namespace="http://schemas.datacontract.org/2004/07/WalletService")]
    [System.SerializableAttribute()]
    public partial class DepositResponse : WalletServiceUnitTests.WalletService.GetWalletBalanceResponse {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlterAccountStateResponse", Namespace="http://schemas.datacontract.org/2004/07/WalletService")]
    [System.SerializableAttribute()]
    public partial class AlterAccountStateResponse : WalletServiceUnitTests.WalletService.Response {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RegisterResponse", Namespace="http://schemas.datacontract.org/2004/07/WalletService")]
    [System.SerializableAttribute()]
    public partial class RegisterResponse : WalletServiceUnitTests.WalletService.Response {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long NewAccountIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long NewAccountID {
            get {
                return this.NewAccountIDField;
            }
            set {
                if ((this.NewAccountIDField.Equals(value) != true)) {
                    this.NewAccountIDField = value;
                    this.RaisePropertyChanged("NewAccountID");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WalletService.IWalletService")]
    public interface IWalletService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWalletService/Register", ReplyAction="http://tempuri.org/IWalletService/RegisterResponse")]
        WalletServiceUnitTests.WalletService.RegisterResponse Register(WalletServiceUnitTests.WalletService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWalletService/Register", ReplyAction="http://tempuri.org/IWalletService/RegisterResponse")]
        System.Threading.Tasks.Task<WalletServiceUnitTests.WalletService.RegisterResponse> RegisterAsync(WalletServiceUnitTests.WalletService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWalletService/GetWalletBalance", ReplyAction="http://tempuri.org/IWalletService/GetWalletBalanceResponse")]
        WalletServiceUnitTests.WalletService.GetWalletBalanceResponse GetWalletBalance(WalletServiceUnitTests.WalletService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWalletService/GetWalletBalance", ReplyAction="http://tempuri.org/IWalletService/GetWalletBalanceResponse")]
        System.Threading.Tasks.Task<WalletServiceUnitTests.WalletService.GetWalletBalanceResponse> GetWalletBalanceAsync(WalletServiceUnitTests.WalletService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWalletService/Withdraw", ReplyAction="http://tempuri.org/IWalletService/WithdrawResponse")]
        WalletServiceUnitTests.WalletService.WithdrawResponse Withdraw(WalletServiceUnitTests.WalletService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWalletService/Withdraw", ReplyAction="http://tempuri.org/IWalletService/WithdrawResponse")]
        System.Threading.Tasks.Task<WalletServiceUnitTests.WalletService.WithdrawResponse> WithdrawAsync(WalletServiceUnitTests.WalletService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWalletService/Deposit", ReplyAction="http://tempuri.org/IWalletService/DepositResponse")]
        WalletServiceUnitTests.WalletService.DepositResponse Deposit(WalletServiceUnitTests.WalletService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWalletService/Deposit", ReplyAction="http://tempuri.org/IWalletService/DepositResponse")]
        System.Threading.Tasks.Task<WalletServiceUnitTests.WalletService.DepositResponse> DepositAsync(WalletServiceUnitTests.WalletService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWalletService/AlterAccountState", ReplyAction="http://tempuri.org/IWalletService/AlterAccountStateResponse")]
        WalletServiceUnitTests.WalletService.AlterAccountStateResponse AlterAccountState(WalletServiceUnitTests.WalletService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWalletService/AlterAccountState", ReplyAction="http://tempuri.org/IWalletService/AlterAccountStateResponse")]
        System.Threading.Tasks.Task<WalletServiceUnitTests.WalletService.AlterAccountStateResponse> AlterAccountStateAsync(WalletServiceUnitTests.WalletService.Request request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWalletServiceChannel : WalletServiceUnitTests.WalletService.IWalletService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WalletServiceClient : System.ServiceModel.ClientBase<WalletServiceUnitTests.WalletService.IWalletService>, WalletServiceUnitTests.WalletService.IWalletService {
        
        public WalletServiceClient() {
        }
        
        public WalletServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WalletServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WalletServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WalletServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WalletServiceUnitTests.WalletService.RegisterResponse Register(WalletServiceUnitTests.WalletService.Request request) {
            return base.Channel.Register(request);
        }
        
        public System.Threading.Tasks.Task<WalletServiceUnitTests.WalletService.RegisterResponse> RegisterAsync(WalletServiceUnitTests.WalletService.Request request) {
            return base.Channel.RegisterAsync(request);
        }
        
        public WalletServiceUnitTests.WalletService.GetWalletBalanceResponse GetWalletBalance(WalletServiceUnitTests.WalletService.Request request) {
            return base.Channel.GetWalletBalance(request);
        }
        
        public System.Threading.Tasks.Task<WalletServiceUnitTests.WalletService.GetWalletBalanceResponse> GetWalletBalanceAsync(WalletServiceUnitTests.WalletService.Request request) {
            return base.Channel.GetWalletBalanceAsync(request);
        }
        
        public WalletServiceUnitTests.WalletService.WithdrawResponse Withdraw(WalletServiceUnitTests.WalletService.Request request) {
            return base.Channel.Withdraw(request);
        }
        
        public System.Threading.Tasks.Task<WalletServiceUnitTests.WalletService.WithdrawResponse> WithdrawAsync(WalletServiceUnitTests.WalletService.Request request) {
            return base.Channel.WithdrawAsync(request);
        }
        
        public WalletServiceUnitTests.WalletService.DepositResponse Deposit(WalletServiceUnitTests.WalletService.Request request) {
            return base.Channel.Deposit(request);
        }
        
        public System.Threading.Tasks.Task<WalletServiceUnitTests.WalletService.DepositResponse> DepositAsync(WalletServiceUnitTests.WalletService.Request request) {
            return base.Channel.DepositAsync(request);
        }
        
        public WalletServiceUnitTests.WalletService.AlterAccountStateResponse AlterAccountState(WalletServiceUnitTests.WalletService.Request request) {
            return base.Channel.AlterAccountState(request);
        }
        
        public System.Threading.Tasks.Task<WalletServiceUnitTests.WalletService.AlterAccountStateResponse> AlterAccountStateAsync(WalletServiceUnitTests.WalletService.Request request) {
            return base.Channel.AlterAccountStateAsync(request);
        }
    }
}
